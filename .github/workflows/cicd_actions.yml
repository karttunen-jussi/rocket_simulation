name: CI/CD actions

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        compiler:
          - llvm
          - gcc

    steps:
      - uses: actions/checkout@v4

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{matrix.compiler}}
          clang-format: true
          cmake: true
          cppcheck: true
          ninja: true

      - name: Configure CMake
        if: ${{ matrix.compiler == 'gcc' }}
        run: cmake -G "Ninja" -S .\ -B .\build_gnu -D CMAKE_CXX_COMPILER=g++
        if: ${{ matrix.compiler == 'llvm' }}
        run: cmake -G "Ninja" -S .\ -B .\build_clang -D CMAKE_CXX_COMPILER=Clang++

      - name: Build
        if: ${{ matrix.compiler == 'gcc' }}
        run: cmake --build .\build_gnu
        if: ${{ matrix.compiler == 'llvm' }}
        run: cmake --build .\build_clang

      - name: Create .txt file that contains all .cpp and .hpp files
        run: |
          $TargetFolder = ".\source"
          $OutputFile   = ".\cpplist.txt"

          Get-ChildItem -Path $TargetFolder -Recurse -File | 
                Where-Object { $_.Extension -eq ".cpp" -or $_.Extension -eq ".hpp" } | 
                Select-Object -ExpandProperty FullName | 
                Out-File -FilePath $OutputFile -Encoding UTF8 -Force

      - name: Check code style with clang-format
        run: clang-format --Werror --dry-run --verbose --style=file --files=cpplist.txt

      - name: Run static analysis with Cppcheck
        run: cppcheck --enable=all --suppress=missingIncludeSystem --suppress=missingInclude --file-list=cpplist.txt --error-exitcode=1

      - name: Execute unit tests
        if: ${{ matrix.compiler == 'gcc' }}
        working-directory: .\build_gnu
        if: ${{ matrix.compiler == 'llvm' }}
        working-directory: .\build_clang
        run: ctest
