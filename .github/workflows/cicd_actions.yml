name: CI/CD actions

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-2025

    steps:
      - uses: actions/checkout@v4

      - name: Install missing SW tools
        run: choco install cppcheck

      - name: Configure CMake for Clang build
        run: cmake -G "Ninja" -S .\ -B .\build_clang -D CMAKE_CXX_COMPILER=clang++

      - name: Build with Clang compiler
        run: cmake --build .\build_clang

      - name: Configure CMake for GNU build
        run: cmake -G "Ninja" -S .\ -B .\build_gnu -D CMAKE_CXX_COMPILER=g++

      - name: Build with GNU compiler
        run: cmake --build .\build_gnu

      - name: Create .txt file that contains list of all .cpp and .hpp files
        run: |
          $TargetFolder = ".\source"
          $OutputFile   = ".\cpplist.txt"

          Get-ChildItem -Path $TargetFolder -Recurse -File |
                Where-Object { $_.Extension -eq ".cpp" -or $_.Extension -eq ".hpp" } |
                Select-Object -ExpandProperty FullName |
                Out-File -FilePath $OutputFile -Encoding UTF8 -Force

      - name: Check code style with clang-format
        run: clang-format --Werror --dry-run --verbose --style=file --files=cpplist.txt

      - name: Run static analysis with clang-tidy
        run: python ".\cicd_pipeline\python\run-clang-tidy.py" -quiet -config-file ".clang-tidy" -p ".\build_clang" -source-filter "^(?!.*?catch2).*$"

      - name: Run static analysis with Cppcheck
        run: |
          # Runner has another cppcheck.exe installed that is broken. To prevent calling it, add the correct version first in the Path.
          $env:Path = "C:\Program Files\Cppcheck;" + $env:Path
          cppcheck --enable=all --suppress=missingIncludeSystem --suppress=missingInclude --file-list=cpplist.txt --error-exitcode=1

      - name: Execute unit tests
        run: ctest  --test-dir ".\build_gnu"

      - name: Install pytest and run tests with it
        run: |
          pip install pytest
          pytest ".\tests\test_socket_integration.py" -s
